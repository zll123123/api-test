{"name": "test_getseal_list[new_case_info2]", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not subscriptable", "trace": "self = <unitest.test_case.test_seal.Test_seal object at 0x7fe0389d8640>\nnew_case_info = {'expected': [{'eq': {'code': 0}}, {'eq': {'message': 'SUCCESS'}}, {'contains': 'id'}], 'name': '获取指定公司的印章列表', 'parame...ttribute-sealCategoryName': 'data/seal/seal_list.csv'}, 'request': {'params': {'name': '${get_extract}(companyName)'}}}\n\n    @pytest.mark.parametrize(\n        \"new_case_info\",\n        parse_csv(\n            read_case_yaml(os.path.join(rootpath, \"test_data/seal/seal_list.yaml\"))\n        ),\n    )\n    @pytest.mark.run(order=4)\n    @allure.story(\"获取印章列表接口\")\n    def test_getseal_list(self, new_case_info):\n>       request_Util().analyse_yaml(new_case_info)\n\ntest_case/test_seal.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutil/api_method.py:143: in analyse_yaml\n    res = self.send_request(\nutil/api_method.py:188: in send_request\n    kwargs[key] = self.replace_expression(value)\nutil/api_method.py:88: in replace_expression\n    value = getattr(Debug_talk(), func)(*args_list)\ndebug_talk.py:15: in get_extract\n    return get_extract(key)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkey = 'companyName'\n\n    def get_extract(key):\n        yamlpath = os.path.join(rootpath, \"config/extract.yaml\")\n        with open(yamlpath, mode=\"r\", encoding=\"utf-8\") as f:\n            result = yaml.load(stream=f, Loader=yaml.FullLoader)\n>           return result[key]\nE           TypeError: 'NoneType' object is not subscriptable\n\nutil/operate_yaml.py:46: TypeError"}, "parameters": [{"name": "new_case_info", "value": "{'name': '获取指定公司的印章列表', 'request': {'method': 'GET', 'url': '/seal/list', 'params': {'id': '', 'name': '${get_extract}(companyName)', 'registerNo': '', 'openCompanyId': '', 'sealAttribute': '', 'sealCategoryName': ''}}, 'parameters': {'case_name-id-name-registerNo-openCompanyId-sealAttribute-sealCategoryName': 'data/seal/seal_list.csv'}, 'expected': [{'eq': {'code': 0}}, {'eq': {'message': 'SUCCESS'}}, {'contains': 'id'}]}"}], "start": 1684856609995, "stop": 1684856609999, "uuid": "c731915f-f603-485a-babd-af0245995afe", "historyId": "599da207a4cf8b698d677531d6066465", "testCaseId": "9d505e84024551b729e6d33d1f13bfb9", "fullName": "test_case.test_seal.Test_seal#test_getseal_list", "labels": [{"name": "story", "value": "获取印章列表接口"}, {"name": "tag", "value": "run(order=4)"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_seal"}, {"name": "subSuite", "value": "Test_seal"}, {"name": "host", "value": "MacBook-Pro-layla.local"}, {"name": "thread", "value": "7531-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_seal"}]}