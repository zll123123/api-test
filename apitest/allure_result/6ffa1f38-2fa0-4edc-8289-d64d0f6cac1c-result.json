{"name": "test_auto_create_seal[new_case_info0]", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not subscriptable", "trace": "self = <apitest.test_case.test_seal.Test_seal object at 0x7fe0389d8a60>\nnew_case_info = {'expected': [{'eq': {'code': 0}}, {'eq': {'message': 'SUCCESS'}}], 'name': '创建印章电子章', 'parameters': {'case_name-categ...ntent': '印章测试', 'sealCategoryType': 'specialWithoutStar'}, 'manager': {'contact': '${common_data}(userMobile)'}, ...}}}\n\n    @pytest.mark.parametrize(\n        \"new_case_info\",\n        parse_csv(\n            read_case_yaml(\n                os.path.join(rootpath, \"test_data/seal/seal_create_auto.yaml\")\n            )\n        ),\n    )\n    @pytest.mark.run(order=3)\n    @allure.story(\"v2接口创建印章\")\n    def test_auto_create_seal(self, new_case_info):\n>       request_Util().analyse_yaml(new_case_info)\n\ntest_case/test_seal.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutil/api_method.py:143: in analyse_yaml\n    res = self.send_request(\nutil/api_method.py:188: in send_request\n    kwargs[key] = self.replace_expression(value)\nutil/api_method.py:88: in replace_expression\n    value = getattr(Debug_talk(), func)(*args_list)\ndebug_talk.py:15: in get_extract\n    return get_extract(key)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nkey = 'companyName'\n\n    def get_extract(key):\n        yamlpath = os.path.join(rootpath, \"config/extract.yaml\")\n        with open(yamlpath, mode=\"r\", encoding=\"utf-8\") as f:\n            result = yaml.load(stream=f, Loader=yaml.FullLoader)\n>           return result[key]\nE           TypeError: 'NoneType' object is not subscriptable\n\nutil/operate_yaml.py:46: TypeError"}, "parameters": [{"name": "new_case_info", "value": "{'name': '创建印章电子章', 'request': {'method': 'POST', 'url': '/v2/seal/create', 'headers': {'Content-Type': 'application/json'}, 'json': {'category': 'ELECTRONIC', 'method': 'auto', 'name': '自动生成印章${GenTimestamp}()', 'sealCategoryName': '财务专用章', 'company': {'name': '${get_extract}(companyName)'}, 'department': '', 'spec': 'CIRCULAR_40', 'operatorInfo': {'contact': '${common_data}(userMobile)'}, 'manager': {'contact': '${common_data}(userMobile)'}, 'user': {'contact': '${common_data}(userMobile)'}, 'customSealAttribute': {'sealCategoryType': 'specialWithoutStar', 'innerContent': '印章测试', 'enterpriseCode': '1234567'}, 'openImageBlur': True, 'openSealId': 122343445}}, 'parameters': {'case_name-category-method-sealCategoryName-company-name-spec-electronicModel-department-operatorInfo-manager-user-customSealAttribute-openImageBlur-openSealId': 'data/seal/seal_create_auto.csv'}, 'expected': [{'eq': {'code': 0}}, {'eq': {'message': 'SUCCESS'}}]}"}], "start": 1684856534747, "stop": 1684856534753, "uuid": "df5fa2a5-d4a6-4285-8347-8e4df82cb911", "historyId": "27d77dee141049035fe09673852dfe77", "testCaseId": "a909963a1beabdc413edc99ab473e3e0", "fullName": "test_case.test_seal.Test_seal#test_auto_create_seal", "labels": [{"name": "story", "value": "v2接口创建印章"}, {"name": "tag", "value": "run(order=3)"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_seal"}, {"name": "subSuite", "value": "Test_seal"}, {"name": "host", "value": "MacBook-Pro-layla.local"}, {"name": "thread", "value": "7531-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_seal"}]}